{"ast":null,"code":"import{jsx as _jsx}from\"react/jsx-runtime\";import React,{useEffect}from'react';import{connect}from'react-redux';import Spinner from'../layout/Spinner';import{getGithubRepos}from'../../actions/profile';var ProfileGithub=function ProfileGithub(_ref){var username=_ref.username,getGithubRepos=_ref.getGithubRepos,repos=_ref.repos;useEffect(function(){getGithubRepos(username);},[getGithubRepos(username)]);return/*#__PURE__*/_jsx(\"div\",{});};var mapStateToProps=function mapStateToProps(state){return{repos:state.profile.repos};};export default connect(mapStateToProps,{getGithubRepos:getGithubRepos})(ProfileGithub);","map":{"version":3,"sources":["/home/rahul/Desktop/myfolder/projects/webdevelopment/third/client/src/components/profile/ProfileGithub.js"],"names":["React","useEffect","connect","Spinner","getGithubRepos","ProfileGithub","username","repos","mapStateToProps","state","profile"],"mappings":"2CAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CAEA,OAASC,OAAT,KAAwB,aAAxB,CACA,MAAOC,CAAAA,OAAP,KAAoB,mBAApB,CACA,OAASC,cAAT,KAA+B,uBAA/B,CAEA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,MAAyC,IAAtCC,CAAAA,QAAsC,MAAtCA,QAAsC,CAA5BF,cAA4B,MAA5BA,cAA4B,CAAZG,KAAY,MAAZA,KAAY,CAC7DN,SAAS,CAAC,UAAM,CACdG,cAAc,CAACE,QAAD,CAAd,CACD,CAFQ,CAEN,CAACF,cAAc,CAACE,QAAD,CAAf,CAFM,CAAT,CAIA,mBACE,cADF,CAGD,CARD,CAgBA,GAAME,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAC,KAAK,QAAK,CAChCF,KAAK,CAAEE,KAAK,CAACC,OAAN,CAAcH,KADW,CAAL,EAA7B,CAIA,cAAeL,CAAAA,OAAO,CAACM,eAAD,CAAkB,CAAEJ,cAAc,CAAdA,cAAF,CAAlB,CAAP,CAA6CC,aAA7C,CAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport { getGithubRepos } from '../../actions/profile';\n\nconst ProfileGithub = ({ username, getGithubRepos, repos }) => {\n  useEffect(() => {\n    getGithubRepos(username);\n  }, [getGithubRepos(username)]);\n\n  return (\n    <div/>\n  );\n};\n\nProfileGithub.propTypes = {\n  getGithubRepos: PropTypes.func.isRequired,\n  repos: PropTypes.array.isRequired,\n  username: PropTypes.string.isRequired\n};\n\nconst mapStateToProps = state => ({\n  repos: state.profile.repos\n});\n\nexport default connect(mapStateToProps, { getGithubRepos })(ProfileGithub);"]},"metadata":{},"sourceType":"module"}