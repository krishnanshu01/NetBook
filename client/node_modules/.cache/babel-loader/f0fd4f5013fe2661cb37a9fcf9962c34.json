{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alert';\nimport { GET_PROFILE, PROFILE_ERROR, UPDATE_PROFILE } from './types'; //Get current users profile\n\nexport const getCurrentProfile = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/profile/me');\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //Create or update profile\n\nexport const createProfile = (formData, history, edit = false) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.post('/api/profile', formData, config);\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(edit ? 'Profile Updated' : 'Profile Created', 'success'));\n\n    if (!edit) {\n      history.push('/dashboard');\n    }\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //add experience\n\nexport const addExperience = (formData, history) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.put('/api/profile/experience', formData, config);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Experience Added', 'success'));\n    history.push('/dashboard');\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //add education\n\nexport const addEducation = (formData, history) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.put('/api/profile/education', formData, config);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Education Added', 'success'));\n    history.push('/dashboard');\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};","map":{"version":3,"sources":["/home/rahul/Desktop/myfolder/projects/webdevelopment/third/client/src/actions/profile.js"],"names":["axios","setAlert","GET_PROFILE","PROFILE_ERROR","UPDATE_PROFILE","getCurrentProfile","dispatch","res","get","type","payload","data","err","msg","response","statusText","status","createProfile","formData","history","edit","config","headers","post","push","errors","forEach","error","addExperience","put","addEducation"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { setAlert } from './alert';\n\nimport {\n    GET_PROFILE,\n    PROFILE_ERROR,\n    UPDATE_PROFILE\n} from './types';\n\n//Get current users profile\nexport const getCurrentProfile = () => async dispatch => {\n try{\n     const res = await axios.get('/api/profile/me');\n     dispatch({\n        type: GET_PROFILE,\n        payload: res.data\n    });\n      \n }catch(err){\n    dispatch({\n        type: PROFILE_ERROR,\n        payload: { msg : err.response.statusText , status: err.response.status}\n    })\n }\n};\n\n//Create or update profile\n\nexport const createProfile = (formData , history , edit = false) => async dispatch => {\n    try {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const res = await axios.post('/api/profile' , formData , config);\n\n        dispatch({\n            type: GET_PROFILE,\n            payload: res.data\n        });\n\n        dispatch(setAlert(edit ? 'Profile Updated' : 'Profile Created' , 'success'));\n\n        if(!edit){\n            history.push('/dashboard');\n        }\n    }catch(err){\n\n        const errors = err.response.data.errors;\n\n        if (errors) {\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')))\n        }\n\n        dispatch({\n            type : PROFILE_ERROR,\n            payload: {msg : err.response.statusText , status: err.response.status }\n        });\n\n    }\n}\n\n//add experience\n\nexport const addExperience = (formData , history) => async dispatch => {\n    try {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const res = await axios.put('/api/profile/experience' , formData , config);\n\n        dispatch({\n            type: UPDATE_PROFILE,\n            payload: res.data\n        });\n\n        dispatch(setAlert('Experience Added' , 'success'))\n    \n        history.push('/dashboard');\n    \n    }catch(err){\n\n        const errors = err.response.data.errors;\n\n        if (errors) {\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')))\n        }\n\n        dispatch({\n            type : PROFILE_ERROR,\n            payload: {msg : err.response.statusText , status: err.response.status }\n        });\n\n    }\n}\n\n//add education\n\nexport const addEducation = (formData , history) => async dispatch => {\n    try {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const res = await axios.put('/api/profile/education' , formData , config);\n\n        dispatch({\n            type: UPDATE_PROFILE,\n            payload: res.data\n        });\n\n        dispatch(setAlert('Education Added' , 'success'))\n    \n        history.push('/dashboard');\n    \n    }catch(err){\n\n        const errors = err.response.data.errors;\n\n        if (errors) {\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')))\n        }\n\n        dispatch({\n            type : PROFILE_ERROR,\n            payload: {msg : err.response.statusText , status: err.response.status }\n        });\n\n    }\n}"]},"metadata":{},"sourceType":"module"}