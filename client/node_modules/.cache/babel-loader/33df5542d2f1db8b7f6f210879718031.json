{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import React,{Fragment,useEffect}from'react';import{connect}from'react-redux';import Spinner from'../layout/Spinner';import{getPost}from'../../actions/post';import PostItem from'../posts/PostItem';import CommentForm from'../post/CommentForm';import CommentItem from'../post/CommentItem';import{Link}from'react-router-dom';var Post=function Post(_ref){var getPost=_ref.getPost,_ref$post=_ref.post,post=_ref$post.post,loading=_ref$post.loading,match=_ref.match;useEffect(function(){getPost(match.params.id);},[getPost]);return loading||post===null?/*#__PURE__*/_jsx(Spinner,{}):/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(Link,{to:\"/posts\",className:\"btn\",children:\"Back to Post\"}),/*#__PURE__*/_jsx(PostItem,{post:post,showActions:false}),/*#__PURE__*/_jsx(CommentForm,{postId:post._id}),/*#__PURE__*/_jsx(\"div\",{className:\"comments\",children:post.comments.map(function(comment){return/*#__PURE__*/_jsx(CommentItem,{comment:comment,postId:post._id},comment._id);})})]});};var mapStateToProps=function mapStateToProps(state){return{post:state.post};};export default connect(mapStateToProps,{getPost:getPost})(Post);","map":{"version":3,"sources":["/home/rahul/Desktop/myfolder/projects/webdevelopment/third/client/src/components/post/Post.js"],"names":["React","Fragment","useEffect","connect","Spinner","getPost","PostItem","CommentForm","CommentItem","Link","Post","post","loading","match","params","id","_id","comments","map","comment","mapStateToProps","state"],"mappings":"wFAAA,MAAOA,CAAAA,KAAP,EAAiBC,QAAjB,CAA4BC,SAA5B,KAA4C,OAA5C,CAEA,OAASC,OAAT,KAAwB,aAAxB,CACA,MAAOC,CAAAA,OAAP,KAAoB,mBAApB,CACA,OAASC,OAAT,KAAwB,oBAAxB,CACA,MAAOC,CAAAA,QAAP,KAAqB,mBAArB,CACA,MAAOC,CAAAA,WAAP,KAAwB,qBAAxB,CACA,MAAOC,CAAAA,WAAP,KAAwB,qBAAxB,CACA,OAASC,IAAT,KAAqB,kBAArB,CAEA,GAAMC,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,MAAgD,IAA9CL,CAAAA,OAA8C,MAA9CA,OAA8C,gBAApCM,IAAoC,CAA5BA,IAA4B,WAA5BA,IAA4B,CAAtBC,OAAsB,WAAtBA,OAAsB,CAAXC,KAAW,MAAXA,KAAW,CACzDX,SAAS,CAAC,UAAK,CACXG,OAAO,CAACQ,KAAK,CAACC,MAAN,CAAaC,EAAd,CAAP,CACH,CAFQ,CAEL,CAACV,OAAD,CAFK,CAAT,CAGA,MAAOO,CAAAA,OAAO,EAAID,IAAI,GAAK,IAApB,cAA2B,KAAC,OAAD,IAA3B,cAAwC,MAAC,QAAD,yBAC3C,KAAC,IAAD,EAAM,EAAE,CAAC,QAAT,CAAkB,SAAS,CAAC,KAA5B,0BAD2C,cAI3C,KAAC,QAAD,EAAU,IAAI,CAAEA,IAAhB,CAAsB,WAAW,CAAI,KAArC,EAJ2C,cAK3C,KAAC,WAAD,EAAa,MAAM,CAAEA,IAAI,CAACK,GAA1B,EAL2C,cAM3C,YAAK,SAAS,CAAC,UAAf,UACKL,IAAI,CAACM,QAAL,CAAcC,GAAd,CAAkB,SAAAC,OAAO,qBACtB,KAAC,WAAD,EAA+B,OAAO,CAAEA,OAAxC,CAAiD,MAAM,CAAIR,IAAI,CAACK,GAAhE,EAAkBG,OAAO,CAACH,GAA1B,CADsB,EAAzB,CADL,EAN2C,GAA/C,CAYH,CAhBD,CAuBA,GAAMI,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAC,KAAK,QAAK,CAC9BV,IAAI,CAAEU,KAAK,CAACV,IADkB,CAAL,EAA7B,CAIA,cAAeR,CAAAA,OAAO,CAACiB,eAAD,CAAiB,CAACf,OAAO,CAAPA,OAAD,CAAjB,CAAP,CAAmCK,IAAnC,CAAf","sourcesContent":["import React , { Fragment , useEffect} from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport { getPost } from '../../actions/post';\nimport PostItem from '../posts/PostItem';\nimport CommentForm from '../post/CommentForm';\nimport CommentItem from '../post/CommentItem';\nimport { Link } from 'react-router-dom';\n\nconst Post = ({getPost , post : {post ,loading} , match}) => {\n    useEffect(() =>{\n        getPost(match.params.id);\n    } , [getPost]);\n    return loading || post === null ? <Spinner/> : <Fragment>\n        <Link to='/posts' className='btn'>\n            Back to Post\n        </Link>\n        <PostItem post={post} showActions = {false}/>\n        <CommentForm postId={post._id}/>\n        <div className=\"comments\">\n            {post.comments.map(comment => (\n                <CommentItem key={comment._id} comment={comment} postId = {post._id}/>\n            ))}\n        </div>\n    </Fragment>\n}\n\nPost.propTypes = {\n    getPosts: PropTypes.func.isRequired,\n    post: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n    post: state.post\n})\n\nexport default connect(mapStateToProps,{getPost})(Post); \n"]},"metadata":{},"sourceType":"module"}