{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/rahul/Desktop/myfolder/projects/webdevelopment/third/client/src/components/dashboard/Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getCurrentProfile } from '../../actions/profile';\nimport Spinner from '../layout/Spinner';\nimport { DashboardActions } from './DashboardActions';\nimport Experience from './Experience';\nimport Education from './Education';\n\nconst Dashboard = ({\n  getCurrentProfile,\n  auth: {\n    user\n  },\n  profile: {\n    profile,\n    loading\n  }\n}) => {\n  _s();\n\n  useEffect(() => {\n    getCurrentProfile();\n  }, []);\n  return loading && profile == null ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 42\n  }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"large text-primary\",\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"lead\",\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-user\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), \"Welcome \", user && user.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this), profile != null ? /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(DashboardActions, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Experience, {\n        experience: profile.experience\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Education, {\n        education: profile.education\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 29\n    }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"You have not yet setup a profile, please add some info\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/create-profile\",\n        className: \"btn btn-primary my-1\",\n        children: \"Create Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 56\n  }, this);\n};\n\n_s(Dashboard, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Dashboard;\nDashboard.propTypes = {\n  getCurrentProfile: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProp = state => ({\n  auth: state.auth,\n  profile: state.profile\n});\n\nexport default connect(mapStateToProp, {\n  getCurrentProfile\n})(Dashboard);\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/home/rahul/Desktop/myfolder/projects/webdevelopment/third/client/src/components/dashboard/Dashboard.js"],"names":["React","Fragment","useEffect","Link","PropTypes","connect","getCurrentProfile","Spinner","DashboardActions","Experience","Education","Dashboard","auth","user","profile","loading","name","experience","education","propTypes","func","isRequired","object","mapStateToProp","state"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAASC,iBAAT,QAAkC,uBAAlC;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,gBAAT,QAAiC,oBAAjC;AACA,OAAOC,UAAP,MAAwB,cAAxB;AACA,OAAOC,SAAP,MAAuB,aAAvB;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAACL,EAAAA,iBAAD;AACdM,EAAAA,IAAI,EAAG;AAACC,IAAAA;AAAD,GADO;AAEbC,EAAAA,OAAO,EAAE;AAACA,IAAAA,OAAD;AAAWC,IAAAA;AAAX;AAFI,CAAD,KAEsB;AAAA;;AAEpCb,EAAAA,SAAS,CAAC,MAAM;AACZI,IAAAA,iBAAiB;AACpB,GAFQ,EAEN,EAFM,CAAT;AAGA,SAAQS,OAAO,IAAID,OAAO,IAAI,IAAtB,gBAA6B,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,UAA7B,gBAA2C,QAAC,QAAD;AAAA,4BAC/C;AAAI,MAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAD+C,eAE/C;AAAG,MAAA,SAAS,EAAC,MAAb;AAAA,8BACA;AAAG,QAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cADA,cACwCD,IAAI,IAAIA,IAAI,CAACG,IADrD;AAAA;AAAA;AAAA;AAAA;AAAA,YAF+C,EAK9CF,OAAO,IAAI,IAAX,gBAAmB,QAAC,QAAD;AAAA,8BAChB,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,cADgB,eAEhB,QAAC,UAAD;AAAY,QAAA,UAAU,EAAEA,OAAO,CAACG;AAAhC;AAAA;AAAA;AAAA;AAAA,cAFgB,eAGhB,QAAC,SAAD;AAAW,QAAA,SAAS,EAAEH,OAAO,CAACI;AAA9B;AAAA;AAAA;AAAA;AAAA,cAHgB;AAAA;AAAA;AAAA;AAAA;AAAA,YAAnB,gBAKA,QAAC,QAAD;AAAA,8BACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADH,eAEG,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,iBAAT;AAA2B,QAAA,SAAS,EAAC,sBAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFH;AAAA;AAAA;AAAA;AAAA;AAAA,YAV8C;AAAA;AAAA;AAAA;AAAA;AAAA,UAAnD;AAmBH,CA1BD;;GAAMP,S;;KAAAA,S;AA4BNA,SAAS,CAACQ,SAAV,GAAsB;AAClBb,EAAAA,iBAAiB,EAAEF,SAAS,CAACgB,IAAV,CAAeC,UADhB;AAElBT,EAAAA,IAAI,EAAER,SAAS,CAACkB,MAAV,CAAiBD,UAFL;AAGlBP,EAAAA,OAAO,EAAEV,SAAS,CAACkB,MAAV,CAAiBD;AAHR,CAAtB;;AAMA,MAAME,cAAc,GAAGC,KAAK,KAAK;AAC7BZ,EAAAA,IAAI,EAAEY,KAAK,CAACZ,IADiB;AAE7BE,EAAAA,OAAO,EAAEU,KAAK,CAACV;AAFc,CAAL,CAA5B;;AAKA,eAAeT,OAAO,CAACkB,cAAD,EAAiB;AAACjB,EAAAA;AAAD,CAAjB,CAAP,CAA6CK,SAA7C,CAAf","sourcesContent":["import React, {Fragment, useEffect} from 'react';\nimport {Link} from 'react-router-dom'\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport { getCurrentProfile } from '../../actions/profile';\nimport Spinner from '../layout/Spinner';\nimport { DashboardActions } from './DashboardActions';\nimport Experience  from './Experience';\nimport Education  from './Education';\n\nconst Dashboard = ({getCurrentProfile ,\n     auth : {user}\n    , profile :{profile , loading}}) => {\n\n    useEffect(() => {\n        getCurrentProfile();\n    }, []);\n    return  loading && profile == null ?(<Spinner />):(<Fragment>\n        <h1 className=\"large text-primary\">Dashboard</h1>\n        <p className=\"lead\">\n        <i className=\"fas fa-user\"></i>Welcome {user && user.name}\n        </p>\n        {profile != null ? (<Fragment>\n            <DashboardActions/>\n            <Experience experience={profile.experience}/>\n            <Education education={profile.education}/>\n            </Fragment>):\n        (<Fragment>\n            <p>You have not yet setup a profile, please add some info</p>\n            <Link to='/create-profile' className=\"btn btn-primary my-1\">\n               Create Profile \n            </Link>\n         </Fragment>\n        )}\n        </Fragment>\n  );\n}\n\nDashboard.propTypes = {\n    getCurrentProfile: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    profile: PropTypes.object.isRequired\n}\n\nconst mapStateToProp = state => ({\n    auth: state.auth,\n    profile: state.profile\n})\n\nexport default connect(mapStateToProp, {getCurrentProfile})(Dashboard)"]},"metadata":{},"sourceType":"module"}