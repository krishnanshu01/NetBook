{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import React,{Fragment,useEffect}from'react';import{connect}from'react-redux';import Spinner from'../layout/Spinner';import{getProfileById}from'../../actions/profile';import{Link}from'react-router-dom';import ProfileTop from'./ProfileTop';import ProfileAbout from'./ProfileAbout';import ProfileExperience from'./ProfileExperience';import ProfileEducation from'./ProfileEducation';import ProfileGithub from'./ProfileGithub';var Profile=function Profile(_ref){var getProfileById=_ref.getProfileById,_ref$profile=_ref.profile,profile=_ref$profile.profile,loading=_ref$profile.loading,auth=_ref.auth,match=_ref.match;useEffect(function(){getProfileById(match.params.id);},[getProfileById]);return/*#__PURE__*/_jsx(Fragment,{children:profile===null||loading?/*#__PURE__*/_jsx(Spinner,{}):/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(Link,{to:\"/profiles\",className:\"btn btn-light\",children:\"Back To Profiles\"}),auth.isAuthenticated&&auth.loading===false&&auth.user._id===profile[0].user._id&&/*#__PURE__*/_jsx(Link,{to:\"/edit-profile\",className:\"btn btn-dark\",children:\"Edit Profile\"}),/*#__PURE__*/_jsxs(\"div\",{class:\"profile-grid my-1\",children:[/*#__PURE__*/_jsx(ProfileTop,{profile:profile}),/*#__PURE__*/_jsx(ProfileAbout,{profile:profile}),/*#__PURE__*/_jsxs(\"div\",{className:\"profile-exp bg-white p-2\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-primary\",children:\"Experience\"}),profile[0].experience.length>0?/*#__PURE__*/_jsx(Fragment,{children:profile[0].experience.map(function(experience){return/*#__PURE__*/_jsx(ProfileExperience,{experience:experience},experience._id);})}):/*#__PURE__*/_jsx(\"h4\",{children:\"No Experience credentials\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"profile-edu bg-white p-2\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-primary\",children:\"Education\"}),profile[0].education.length>0?/*#__PURE__*/_jsx(Fragment,{children:profile[0].education.map(function(education){return/*#__PURE__*/_jsx(ProfileEducation,{education:education},education._id);})}):/*#__PURE__*/_jsx(\"h4\",{children:\"No education credentials\"})]}),profile[0].githubusername&&/*#__PURE__*/_jsx(ProfileGithub,{username:profile[0].githubusername})]})]})});};var mapStateToProps=function mapStateToProps(state){return{profile:state.profile,auth:state.auth};};export default connect(mapStateToProps,{getProfileById:getProfileById})(Profile);","map":{"version":3,"sources":["/home/rahul/Desktop/myfolder/projects/webdevelopment/third/client/src/components/profile/Profile.js"],"names":["React","Fragment","useEffect","connect","Spinner","getProfileById","Link","ProfileTop","ProfileAbout","ProfileExperience","ProfileEducation","ProfileGithub","Profile","profile","loading","auth","match","params","id","isAuthenticated","user","_id","experience","length","map","education","githubusername","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, {Fragment , useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport {getProfileById} from '../../actions/profile';\nimport { Link } from 'react-router-dom';\nimport ProfileTop from './ProfileTop';\nimport ProfileAbout from './ProfileAbout';\nimport ProfileExperience from './ProfileExperience';\nimport ProfileEducation from './ProfileEducation';\nimport ProfileGithub from './ProfileGithub';\n\n\n\nconst Profile = ({\n   getProfileById,\n   profile: {profile , loading},\n   auth,\n   match\n}) => {\n    useEffect(() => {\n        getProfileById(match.params.id);\n    } , [getProfileById]);\n\n    return( <Fragment>\n        {profile === null || loading ? (<Spinner/>):\n        (\n            <Fragment>\n                <Link to='/profiles' className='btn btn-light'>\n                    Back To Profiles\n                </Link>\n                \n                {auth.isAuthenticated && auth.loading === false && auth.user._id === profile[0].user._id  &&\n                (<Link to='/edit-profile' className='btn btn-dark'>\n                    Edit Profile\n                </Link>)}\n                <div class=\"profile-grid my-1\">\n                    <ProfileTop profile ={profile}/>\n                    <ProfileAbout profile = {profile}/>\n                    <div className=\"profile-exp bg-white p-2\">\n                    <h2 className=\"text-primary\">Experience</h2>\n                    {profile[0].experience.length > 0 ? (\n                    <Fragment>\n                        {profile[0].experience.map(experience => (\n                            <ProfileExperience\n                            key={experience._id}\n                            experience={experience}\n                            />\n                        ))}\n                    </Fragment>) : (<h4>No Experience credentials</h4>)}\n                    </div>\n                    <div className=\"profile-edu bg-white p-2\">\n              <h2 className=\"text-primary\">Education</h2>\n              {profile[0].education.length > 0 ? (\n                <Fragment>\n                  {profile[0].education.map((education) => (\n                    <ProfileEducation\n                      key={education._id}\n                      education={education}\n                    />\n                  ))}\n                </Fragment>\n              ) : (\n                <h4>No education credentials</h4>\n              )}\n            </div>\n            {profile[0].githubusername && (\n              <ProfileGithub username={profile[0].githubusername} />\n            )}\n                </div> \n                </Fragment>\n        )}\n        </Fragment>\n    );\n};\n\nProfile.propTypes = {\n    getProfileById: PropTypes.func.isRequired,\n    profile: PropTypes.object.isRequired,\n    auth: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state =>({\n    profile: state.profile,\n    auth: state.auth\n})\n\nexport default connect(mapStateToProps , {getProfileById}) (Profile)\n"]},"metadata":{},"sourceType":"module"}