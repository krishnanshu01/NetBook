{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/rahul/Desktop/myfolder/projects/webdevelopment/third/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect } from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Landing from './components/layout/Landing';\nimport Navbar from './components/layout/Navbar';\nimport Register from './components/auth/Register';\nimport Login from './components/auth/Login';\nimport Alert from './components/layout/Alert'; //Redux:redux and react are both different things so we use provider which use react-redux module which combins both\n\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport { loadUser } from './actions/auth'; //react class mai life cycle methode hota hi like compotnet mount\n\nif (localStorage.token) {\n  setAuthToken(localStorage.token); // so header mai dall diya x-auth-token mai bole toh header mai\n}\n\nconst App = () => {\n  _s();\n\n  useEffect(() => {\n    store.dispatch(loadUser());\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Provider, {\n    store: store,\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          component: Landing\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"container\",\n          children: [/*#__PURE__*/_jsxDEV(Alert, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Switch, {\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/Register\",\n              component: Register\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/Login\",\n              component: Login\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 3\n  }, this);\n};\n\n_s(App, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/rahul/Desktop/myfolder/projects/webdevelopment/third/client/src/App.js"],"names":["React","Fragment","useEffect","BrowserRouter","Router","Route","Switch","Landing","Navbar","Register","Login","Alert","Provider","store","loadUser","localStorage","token","setAuthToken","App","dispatch"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA2BC,SAA3B,QAA2C,OAA3C;AACA,OAAO,WAAP;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,MAAzC,QAAuD,kBAAvD;AACA,OAAOC,OAAP,MAAoB,6BAApB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,KAAP,MAAkB,2BAAlB,C,CACA;;AAEA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAAQC,QAAR,QAAuB,gBAAvB,C,CAEA;;AAKA,IAAGC,YAAY,CAACC,KAAhB,EAAsB;AACpBC,EAAAA,YAAY,CAACF,YAAY,CAACC,KAAd,CAAZ,CADoB,CACmB;AACxC;;AAGD,MAAME,GAAG,GAAG,MAAK;AAAA;;AACfhB,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,KAAK,CAACM,QAAN,CAAeL,QAAQ,EAAvB;AACD,GAFQ,EAEL,EAFK,CAAT;AAGA,sBACA,QAAC,QAAD;AAAU,IAAA,KAAK,EAAED,KAAjB;AAAA,2BACE,QAAC,MAAD;AAAA,6BACE,QAAC,QAAD;AAAA,gCACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,GAAlB;AAAsB,UAAA,SAAS,EAAEN;AAAjC;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAS,UAAA,SAAS,EAAC,WAAnB;AAAA,kCACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,MAAD;AAAA,oCACE,QAAC,KAAD;AAAO,cAAA,KAAK,MAAZ;AAAa,cAAA,IAAI,EAAC,WAAlB;AAA8B,cAAA,SAAS,EAAEE;AAAzC;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,KAAD;AAAO,cAAA,KAAK,MAAZ;AAAa,cAAA,IAAI,EAAC,QAAlB;AAA2B,cAAA,SAAS,EAAEC;AAAtC;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADA;AAgBE,CApBJ;;GAAMQ,G;;KAAAA,G;AAsBN,eAAeA,GAAf","sourcesContent":["import React, { Fragment , useEffect} from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Landing from './components/layout/Landing';\nimport Navbar from './components/layout/Navbar';\nimport Register from './components/auth/Register';\nimport Login from './components/auth/Login';\nimport Alert from './components/layout/Alert'\n//Redux:redux and react are both different things so we use provider which use react-redux module which combins both\n\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport {loadUser} from './actions/auth';\n\n//react class mai life cycle methode hota hi like compotnet mount\n\n\n\n\nif(localStorage.token){\n  setAuthToken(localStorage.token);      // so header mai dall diya x-auth-token mai bole toh header mai\n}\n\n\nconst App = () =>{\n  useEffect(() => {\n    store.dispatch(loadUser());\n  } , []);\n  return (\n  <Provider store={store}>\n    <Router>\n      <Fragment>\n        <Navbar />\n        <Route exact path='/' component={Landing} />\n        <section className=\"container\">\n          <Alert/>\n          <Switch>\n            <Route exact path=\"/Register\" component={Register} />\n            <Route exact path=\"/Login\" component={Login} />\n          </Switch>\n        </section>\n      </Fragment>\n    </Router>\n  </Provider>\n  )};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}