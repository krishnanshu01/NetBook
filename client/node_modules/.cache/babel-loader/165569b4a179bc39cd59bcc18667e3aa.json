{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alert';\nimport { GET_PROFILE, PROFILE_ERROR } from './types'; //Get current users profile\n\nexport const getCurrentProfile = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/profile/me');\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //Create or update profile\n\nexport const createProfile = (formData, history, edit = false) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.post('/api/profile', formData, config);\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(edit ? 'Profile Updated' : 'Profile Created'));\n\n    if (!edit) {\n      history.push('/dashboard');\n    }\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};","map":{"version":3,"sources":["/home/rahul/Desktop/myfolder/projects/webdevelopment/third/client/src/actions/profile.js"],"names":["axios","setAlert","GET_PROFILE","PROFILE_ERROR","getCurrentProfile","dispatch","res","get","err","type","payload","msg","response","statusText","status","createProfile","formData","history","edit","config","headers","post","data","push","errors","forEach","error"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,SAAzB;AAEA,SACIC,WADJ,EAEIC,aAFJ,QAGO,SAHP,C,CAKA;;AACA,OAAO,MAAMC,iBAAiB,GAAG,MAAM,MAAMC,QAAN,IAAkB;AACxD,MAAG;AACC,UAAMC,GAAG,GAAG,MAAMN,KAAK,CAACO,GAAN,CAAU,iBAAV,CAAlB;AAGH,GAJD,CAIC,OAAMC,GAAN,EAAU;AACRH,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAAEN,aADD;AAELO,MAAAA,OAAO,EAAE;AAAEC,QAAAA,GAAG,EAAGH,GAAG,CAACI,QAAJ,CAAaC,UAArB;AAAkCC,QAAAA,MAAM,EAAEN,GAAG,CAACI,QAAJ,CAAaE;AAAvD;AAFJ,KAAD,CAAR;AAIF;AACD,CAXM,C,CAaP;;AAEA,OAAO,MAAMC,aAAa,GAAG,CAACC,QAAD,EAAYC,OAAZ,EAAsBC,IAAI,GAAG,KAA7B,KAAuC,MAAMb,QAAN,IAAkB;AAClF,MAAI;AACA,UAAMc,MAAM,GAAG;AACXC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AADE,KAAf;AAMA,UAAMd,GAAG,GAAG,MAAMN,KAAK,CAACqB,IAAN,CAAW,cAAX,EAA4BL,QAA5B,EAAuCG,MAAvC,CAAlB;AAEAd,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAAEP,WADD;AAELQ,MAAAA,OAAO,EAAEJ,GAAG,CAACgB;AAFR,KAAD,CAAR;AAKAjB,IAAAA,QAAQ,CAACJ,QAAQ,CAACiB,IAAI,GAAG,iBAAH,GAAuB,iBAA5B,CAAT,CAAR;;AAEA,QAAG,CAACA,IAAJ,EAAS;AACLD,MAAAA,OAAO,CAACM,IAAR,CAAa,YAAb;AACH;AACJ,GAnBD,CAmBC,OAAMf,GAAN,EAAU;AAEP,UAAMgB,MAAM,GAAGhB,GAAG,CAACI,QAAJ,CAAaU,IAAb,CAAkBE,MAAjC;;AAEA,QAAIA,MAAJ,EAAY;AACRA,MAAAA,MAAM,CAACC,OAAP,CAAeC,KAAK,IAAIrB,QAAQ,CAACJ,QAAQ,CAACyB,KAAK,CAACf,GAAP,EAAY,QAAZ,CAAT,CAAhC;AACH;;AAEDN,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAAGN,aADF;AAELO,MAAAA,OAAO,EAAE;AAACC,QAAAA,GAAG,EAAGH,GAAG,CAACI,QAAJ,CAAaC,UAApB;AAAiCC,QAAAA,MAAM,EAAEN,GAAG,CAACI,QAAJ,CAAaE;AAAtD;AAFJ,KAAD,CAAR;AAKH;AACJ,CAlCM","sourcesContent":["import axios from 'axios';\nimport { setAlert } from './alert';\n\nimport {\n    GET_PROFILE,\n    PROFILE_ERROR\n} from './types';\n\n//Get current users profile\nexport const getCurrentProfile = () => async dispatch => {\n try{\n     const res = await axios.get('/api/profile/me');\n\n      \n }catch(err){\n    dispatch({\n        type: PROFILE_ERROR,\n        payload: { msg : err.response.statusText , status: err.response.status}\n    })\n }\n};\n\n//Create or update profile\n\nexport const createProfile = (formData , history , edit = false) => async dispatch => {\n    try {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const res = await axios.post('/api/profile' , formData , config);\n\n        dispatch({\n            type: GET_PROFILE,\n            payload: res.data\n        });\n\n        dispatch(setAlert(edit ? 'Profile Updated' : 'Profile Created'));\n\n        if(!edit){\n            history.push('/dashboard');\n        }\n    }catch(err){\n\n        const errors = err.response.data.errors;\n\n        if (errors) {\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')))\n        }\n\n        dispatch({\n            type : PROFILE_ERROR,\n            payload: {msg : err.response.statusText , status: err.response.status }\n        });\n\n    }\n}"]},"metadata":{},"sourceType":"module"}