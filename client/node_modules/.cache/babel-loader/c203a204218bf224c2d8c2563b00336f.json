{"ast":null,"code":"import { GET_POSTS, POST_ERROR, UPDATE_LIKES, DELETE_POST, ADD_POST } from '../actions/types';\nconst initialState = {\n  posts: [],\n  post: null,\n  loading: true,\n  error: {}\n};\nexport default function (state = initialState, action) {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case GET_POSTS:\n      return { ...state,\n        posts: payload,\n        loading: false\n      };\n\n    case ADD_POST:\n      return { ...state,\n        posts: [...state.posts, payload],\n        loading: false\n      };\n\n    case DELETE_POST:\n      return { ...state,\n        posts: state.posts.filter(post => post._id !== payload),\n        loading: false\n      };\n\n    case POST_ERROR:\n      return { ...state,\n        error: payload,\n        loading: false\n      };\n\n    case UPDATE_LIKES:\n      return { ...state,\n        posts: state.posts.map(post => post._id === payload.id ? { ...post,\n          likes: payload.likes\n        } : post),\n        loading: false\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/rahul/Desktop/myfolder/projects/webdevelopment/third/client/src/reducers/post.js"],"names":["GET_POSTS","POST_ERROR","UPDATE_LIKES","DELETE_POST","ADD_POST","initialState","posts","post","loading","error","state","action","type","payload","filter","_id","map","id","likes"],"mappings":"AAAA,SACIA,SADJ,EAEIC,UAFJ,EAGIC,YAHJ,EAIIC,WAJJ,EAKIC,QALJ,QAMS,kBANT;AAQE,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,IAAI,EAAE,IAFa;AAGnBC,EAAAA,OAAO,EAAE,IAHU;AAInBC,EAAAA,KAAK,EAAE;AAJY,CAArB;AAOA,eAAe,UAASC,KAAK,GAAGL,YAAjB,EAA+BM,MAA/B,EAAuC;AACpD,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,MAA1B;;AAEA,UAAQC,IAAR;AACE,SAAKZ,SAAL;AACE,aAAO,EACL,GAAGU,KADE;AAELJ,QAAAA,KAAK,EAAEO,OAFF;AAGLL,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKJ,QAAL;AACI,aAAM,EACF,GAAGM,KADD;AAEFJ,QAAAA,KAAK,EAAC,CAAC,GAAGI,KAAK,CAACJ,KAAV,EAAkBO,OAAlB,CAFJ;AAGFL,QAAAA,OAAO,EAAE;AAHP,OAAN;;AAKJ,SAAKL,WAAL;AACI,aAAM,EACF,GAAGO,KADD;AAEFJ,QAAAA,KAAK,EAAEI,KAAK,CAACJ,KAAN,CAAYQ,MAAZ,CAAmBP,IAAI,IAAIA,IAAI,CAACQ,GAAL,KAAaF,OAAxC,CAFL;AAGFL,QAAAA,OAAO,EAAE;AAHP,OAAN;;AAKJ,SAAKP,UAAL;AACE,aAAO,EACL,GAAGS,KADE;AAELD,QAAAA,KAAK,EAAEI,OAFF;AAGLL,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKN,YAAL;AACI,aAAM,EACF,GAAGQ,KADD;AAEFJ,QAAAA,KAAK,EAAEI,KAAK,CAACJ,KAAN,CAAYU,GAAZ,CAAgBT,IAAI,IAAIA,IAAI,CAACQ,GAAL,KAAaF,OAAO,CAACI,EAArB,GAA0B,EAAE,GAAGV,IAAL;AAAWW,UAAAA,KAAK,EAAEL,OAAO,CAACK;AAA1B,SAA1B,GAC9BX,IADM,CAFL;AAIFC,QAAAA,OAAO,EAAE;AAJP,OAAN;;AAMJ;AACE,aAAOE,KAAP;AAjCJ;AAmCD","sourcesContent":["import {\n    GET_POSTS,\n    POST_ERROR,\n    UPDATE_LIKES,\n    DELETE_POST,\n    ADD_POST\n  } from '../actions/types';\n  \n  const initialState = {\n    posts: [],\n    post: null,\n    loading: true,\n    error: {}\n  };\n  \n  export default function(state = initialState, action) {\n    const { type, payload } = action;\n  \n    switch (type) {\n      case GET_POSTS:\n        return {\n          ...state,\n          posts: payload,\n          loading: false\n        };\n      case ADD_POST:\n          return{\n              ...state,\n              posts:[...state.posts , payload],\n              loading: false\n          }\n      case DELETE_POST:\n          return{\n              ...state,\n              posts: state.posts.filter(post => post._id !== payload),\n              loading: false\n          }\n      case POST_ERROR:\n        return {\n          ...state,\n          error: payload,\n          loading: false\n        };\n      case UPDATE_LIKES:\n          return{\n              ...state,\n              posts: state.posts.map(post => post._id === payload.id ? { ...post, likes: payload.likes}\n              :post),\n              loading: false\n          }\n      default:\n        return state;\n    }\n  }"]},"metadata":{},"sourceType":"module"}