{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alert';\nimport { GET_POSTS, POST_ERROR, UPDATE_LIKES, DELETE_POST, ADD_POST, GET_POST, ADD_COMMENT, REMOVE_COMMENT } from './types'; //get posts\n\nexport const getPosts = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/post');\n    dispatch({\n      type: GET_POSTS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //Add like\n\nexport const addLike = id => async dispatch => {\n  try {\n    const res = await axios.put(`/api/post/like/${id}`);\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: {\n        id,\n        likes: res.data\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //remove like\n\nexport const removeLike = id => async dispatch => {\n  try {\n    const res = await axios.put(`/api/post/unlike/${id}`);\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: {\n        id,\n        likes: res.data\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //delete post\n\nexport const deletePost = id => async dispatch => {\n  try {\n    axios.delete(`/api/post/${id}`);\n    dispatch({\n      type: DELETE_POST,\n      payload: id\n    });\n    dispatch(setAlert('Post Removed', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //Add post\n\nexport const addPost = formData => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  try {\n    const res = await axios.post('/api/post', formData, config);\n    dispatch({\n      type: ADD_POST,\n      payload: res.data\n    });\n    dispatch(setAlert('Post Created', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //get post\n\nexport const getPost = id => async dispatch => {\n  try {\n    const res = await axios.get(`/api/post/${id}`);\n    dispatch({\n      type: GET_POST,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //Add Comment\n\nexport const addComment = (postId, formData) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  try {\n    const res = await axios.post(`/api/post/comment/${postId}`, formData, config);\n    dispatch({\n      type: ADD_COMMENT,\n      payload: res.data\n    });\n    dispatch(setAlert('Comment Added', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //Delete Comment\n\nexport const removeComment = (postId, commentId) => async dispatch => {\n  try {\n    const res = await axios.delete(`/api/post/comment/${postId}/${commentId}`);\n    dispatch({\n      type: REMOVE_COMMENT,\n      payload: commentId\n    });\n    dispatch(setAlert('Comment Removed', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};","map":{"version":3,"sources":["/home/rahul/Desktop/myfolder/projects/webdevelopment/third/client/src/actions/post.js"],"names":["axios","setAlert","GET_POSTS","POST_ERROR","UPDATE_LIKES","DELETE_POST","ADD_POST","GET_POST","ADD_COMMENT","REMOVE_COMMENT","getPosts","dispatch","res","get","type","payload","data","err","msg","response","statusText","status","addLike","id","put","likes","removeLike","deletePost","delete","addPost","formData","config","headers","post","getPost","addComment","postId","removeComment","commentId"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { setAlert } from './alert';\nimport {\n    GET_POSTS,\n    POST_ERROR,\n    UPDATE_LIKES,\n    DELETE_POST,\n    ADD_POST,\n    GET_POST,\n    ADD_COMMENT,\n    REMOVE_COMMENT\n} from './types';\n\n//get posts\nexport const getPosts = () => async dispatch =>{\n    try{\n        const res = await axios.get('/api/post');\n\n        dispatch({\n            type: GET_POSTS,\n            payload: res.data\n        });\n    }catch(err){\n        dispatch({\n            type : POST_ERROR,\n            payload:{msg: err.response.statusText , status: err.response.status}\n        });\n     }\n    \n}\n\n//Add like\nexport const addLike = id => async dispatch =>{\n    try{\n        const res = await axios.put(`/api/post/like/${id}`);\n\n        dispatch({\n            type: UPDATE_LIKES,\n            payload: {id , likes: res.data}\n        });\n    }catch(err){\n        dispatch({\n            type : POST_ERROR,\n            payload:{msg: err.response.statusText , status: err.response.status}\n        });\n     }\n    \n}\n\n//remove like\nexport const removeLike = id => async dispatch =>{\n    try{\n        const res = await axios.put(`/api/post/unlike/${id}`);\n\n        dispatch({\n            type: UPDATE_LIKES,\n            payload: {id , likes: res.data}\n        });\n    }catch(err){\n        dispatch({\n            type : POST_ERROR,\n            payload:{msg: err.response.statusText , status: err.response.status}\n        });\n     }\n    \n}\n\n//delete post\nexport const deletePost = id => async dispatch =>{\n    try{\n       axios.delete(`/api/post/${id}`);\n\n        dispatch({\n            type: DELETE_POST,\n            payload: id\n        });\n\n        dispatch(setAlert('Post Removed' , 'success'));\n    }catch(err){\n        dispatch({\n            type : POST_ERROR,\n            payload:{msg: err.response.statusText , status: err.response.status}\n        });\n     }\n    \n}\n\n//Add post\nexport const addPost = formData => async dispatch =>{\n    const config = {\n        headers:{\n            'Content-Type': 'application/json'\n        }\n    }\n    try{\n       const res =  await axios.post('/api/post', formData , config);\n\n        dispatch({\n            type: ADD_POST,\n            payload: res.data\n        });\n\n        dispatch(setAlert('Post Created' , 'success'));\n    }catch(err){\n        dispatch({\n            type : POST_ERROR,\n            payload:{msg: err.response.statusText , status: err.response.status}\n        });\n     }\n    \n}\n\n//get post\nexport const getPost = id => async dispatch =>{\n    try{\n        const res = await axios.get(`/api/post/${id}`);\n\n        dispatch({\n            type: GET_POST,\n            payload: res.data\n        });\n    }catch(err){\n        dispatch({\n            type : POST_ERROR,\n            payload:{msg: err.response.statusText , status: err.response.status}\n        });\n     }\n    \n}\n\n//Add Comment\nexport const addComment = (postId , formData ) => async dispatch =>{\n    const config = {\n        headers:{\n            'Content-Type': 'application/json'\n        }\n    }\n    try{\n       const res =  await axios.post(`/api/post/comment/${postId}`, formData , config);\n\n        dispatch({\n            type: ADD_COMMENT,\n            payload: res.data\n        });\n\n        dispatch(setAlert('Comment Added' , 'success'));\n    }catch(err){\n        dispatch({\n            type : POST_ERROR,\n            payload:{msg: err.response.statusText , status: err.response.status}\n        });\n     }\n    \n}\n\n//Delete Comment\nexport const removeComment = (postId , commentId ) => async dispatch =>{\n    \n    try{\n       const res =  await axios.delete(`/api/post/comment/${postId}/${commentId}`);\n\n        dispatch({\n            type: REMOVE_COMMENT,\n            payload: commentId\n        });\n\n        dispatch(setAlert('Comment Removed' , 'success'));\n    }catch(err){\n        dispatch({\n            type : POST_ERROR,\n            payload:{msg: err.response.statusText , status: err.response.status}\n        });\n     }\n    \n}\n"]},"metadata":{},"sourceType":"module"}