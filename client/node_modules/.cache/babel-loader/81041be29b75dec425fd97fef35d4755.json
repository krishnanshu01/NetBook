{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alert';\nimport { GET_PROFILE, PROFILE_ERROR, UPDATE_PROFILE, ACCOUNT_DELETED, GET_PROFILES, GET_REPOS } from './types'; //Get current users profile\n\nexport const getCurrentProfile = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/profile/me');\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //Get All users profile\n\nexport const getProfiles = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/profile');\n    dispatch({\n      type: GET_PROFILES,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //Get profile by id\n\nexport const getProfileById = userId => async dispatch => {\n  try {\n    const res = await axios.get(`/api/profile/user/${userId}`);\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //Get Github repos\n\nexport const getGithubRepos = username => async dispatch => {\n  try {\n    const res = await axios.get(`/api/profile/github/${username}`);\n    dispatch({\n      type: GET_REPOS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //Create or update profile\n\nexport const createProfile = (formData, history, edit = false) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.post('/api/profile', formData, config);\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(edit ? 'Profile Updated' : 'Profile Created', 'success'));\n\n    if (!edit) {\n      history.push('/dashboard');\n    }\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //add experience\n\nexport const addExperience = (formData, history) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.put('/api/profile/experience', formData, config);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Experience Added', 'success'));\n    history.push('/dashboard');\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //add education\n\nexport const addEducation = (formData, history) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.put('/api/profile/education', formData, config);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Education Added', 'success'));\n    history.push('/dashboard');\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //Delete experience\n\nexport const deleteExperience = id => async dispatch => {\n  try {\n    const res = await axios.delete(`/api/profile/experience/${id}`);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Experience Removed', 'success'));\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; ////Delete education\n\nexport const deleteEducation = id => async dispatch => {\n  try {\n    const res = await axios.delete(`/api/profile/education/${id}`);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Education Removed', 'success'));\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //Delete account and profile\n\nexport const deleteAccount = () => async dispatch => {\n  if (window.confirm('Are you sure ? This cannot be undone!')) {\n    try {\n      await axios.delete(`/api/profile`);\n      dispatch({\n        type: UPDATE_PROFILE\n      });\n      dispatch({\n        type: ACCOUNT_DELETED\n      });\n      dispatch(setAlert('Your Account has been Permanantly Deleted'));\n    } catch (err) {\n      dispatch({\n        type: PROFILE_ERROR,\n        payload: {\n          msg: err.response.statusText,\n          status: err.response.status\n        }\n      });\n    }\n  }\n};","map":{"version":3,"sources":["/home/rahul/Desktop/myfolder/projects/webdevelopment/third/client/src/actions/profile.js"],"names":["axios","setAlert","GET_PROFILE","PROFILE_ERROR","UPDATE_PROFILE","ACCOUNT_DELETED","GET_PROFILES","GET_REPOS","getCurrentProfile","dispatch","res","get","type","payload","data","err","msg","response","statusText","status","getProfiles","getProfileById","userId","getGithubRepos","username","createProfile","formData","history","edit","config","headers","post","push","errors","forEach","error","addExperience","put","addEducation","deleteExperience","id","delete","deleteEducation","deleteAccount","window","confirm"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { setAlert } from './alert';\n\nimport {\n    GET_PROFILE,\n    PROFILE_ERROR,\n    UPDATE_PROFILE,\n    ACCOUNT_DELETED,\n    GET_PROFILES,\n    GET_REPOS\n} from './types';\n\n//Get current users profile\nexport const getCurrentProfile = () => async dispatch => {\n try{\n     const res = await axios.get('/api/profile/me');\n     dispatch({\n        type: GET_PROFILE,\n        payload: res.data\n    });\n      \n }catch(err){\n    dispatch({\n        type: PROFILE_ERROR,\n        payload: { msg : err.response.statusText , status: err.response.status}\n    })\n }\n};\n\n//Get All users profile\nexport const getProfiles = () => async dispatch => {\n    try{\n        const res = await axios.get('/api/profile');\n        dispatch({\n           type: GET_PROFILES,\n           payload: res.data\n       });\n         \n    }catch(err){\n       dispatch({\n           type: PROFILE_ERROR,\n           payload: { msg : err.response.statusText , status: err.response.status}\n       })\n    }\n};\n\n//Get profile by id\nexport const getProfileById = userId => async dispatch => {\n    try{\n        const res = await axios.get(`/api/profile/user/${userId}`);\n        dispatch({\n           type: GET_PROFILE,\n           payload: res.data\n       });\n         \n    }catch(err){\n       dispatch({\n           type: PROFILE_ERROR,\n           payload: { msg : err.response.statusText , status: err.response.status}\n       })\n    }\n};\n\n//Get Github repos\nexport const getGithubRepos = username => async dispatch => {\n    try{\n        const res = await axios.get(`/api/profile/github/${username}`);\n        dispatch({\n           type: GET_REPOS,\n           payload: res.data\n       });\n         \n    }catch(err){\n       dispatch({\n           type: PROFILE_ERROR,\n           payload: { msg : err.response.statusText , status: err.response.status}\n       })\n    }\n};\n\n//Create or update profile\n\nexport const createProfile = (formData , history , edit = false) => async dispatch => {\n    try {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const res = await axios.post('/api/profile' , formData , config);\n\n        dispatch({\n            type: GET_PROFILE,\n            payload: res.data\n        });\n\n        dispatch(setAlert(edit ? 'Profile Updated' : 'Profile Created' , 'success'));\n\n        if(!edit){\n            history.push('/dashboard');\n        }\n    }catch(err){\n\n        const errors = err.response.data.errors;\n\n        if (errors) {\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')))\n        }\n\n        dispatch({\n            type : PROFILE_ERROR,\n            payload: {msg : err.response.statusText , status: err.response.status }\n        });\n\n    }\n}\n\n//add experience\n\nexport const addExperience = (formData , history) => async dispatch => {\n    try {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const res = await axios.put('/api/profile/experience' , formData , config);\n\n        dispatch({\n            type: UPDATE_PROFILE,\n            payload: res.data\n        });\n\n        dispatch(setAlert('Experience Added' , 'success'))\n    \n        history.push('/dashboard');\n    \n    }catch(err){\n\n        const errors = err.response.data.errors;\n\n        if (errors) {\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')))\n        }\n\n        dispatch({\n            type : PROFILE_ERROR,\n            payload: {msg : err.response.statusText , status: err.response.status }\n        });\n\n    }\n}\n\n//add education\n\nexport const addEducation = (formData , history) => async dispatch => {\n    try {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const res = await axios.put('/api/profile/education' , formData , config);\n\n        dispatch({\n            type: UPDATE_PROFILE,\n            payload: res.data\n        });\n\n        dispatch(setAlert('Education Added' , 'success'))\n    \n        history.push('/dashboard');\n    \n    }catch(err){\n\n        const errors = err.response.data.errors;\n\n        if (errors) {\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')))\n        }\n\n        dispatch({\n            type : PROFILE_ERROR,\n            payload: {msg : err.response.statusText , status: err.response.status }\n        });\n\n    }\n}\n\n//Delete experience\n\nexport const deleteExperience = id => async dispatch => {\n    try{\n        const res = await axios.delete(`/api/profile/experience/${id}`);\n\n        dispatch({\n            type : UPDATE_PROFILE,\n            payload: res.data\n        });\n\n        dispatch(setAlert('Experience Removed' , 'success'));\n    }catch(err){\n        dispatch({\n            type: PROFILE_ERROR,\n            payload:{msg : err.response.statusText , status: err.response.status }\n        });\n    }\n}\n\n\n////Delete education\n\nexport const deleteEducation = id => async dispatch => {\n    try{\n        const res = await axios.delete(`/api/profile/education/${id}`);\n\n        dispatch({\n            type : UPDATE_PROFILE,\n            payload: res.data\n        });\n\n        dispatch(setAlert('Education Removed' , 'success'));\n    }catch(err){\n        dispatch({\n            type: PROFILE_ERROR,\n            payload:{msg : err.response.statusText , status: err.response.status }\n        });\n    }\n};\n\n//Delete account and profile\n\nexport const deleteAccount = () => async dispatch => {\n\n    if(window.confirm('Are you sure ? This cannot be undone!')){\n\n    try{\n         await axios.delete(`/api/profile`);\n\n        dispatch({\n            type : UPDATE_PROFILE\n        })\n        dispatch({type: ACCOUNT_DELETED})\n\n        dispatch(setAlert('Your Account has been Permanantly Deleted' ));\n    }catch(err){\n        dispatch({\n            type: PROFILE_ERROR,\n            payload:{msg : err.response.statusText , status: err.response.status }\n        });\n    }\n }\n};"]},"metadata":{},"sourceType":"module"}